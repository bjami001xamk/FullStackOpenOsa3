{"version":3,"sources":["services/personService.js","components/persons.js","components/Filter.js","components/Personform.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","catch","error","person","window","confirm","name","delete","id","persons","idPosition","filter","personit","put","Button","props","onClick","handleClick","Persons","filteredPersons","includes","newFilter","map","key","number","personService","setPersons","setErrorText","setTimeout","deletePerson","Filter","value","handleOnChange","onChange","Personform","newName","handleNameChange","newNumber","handleNumberChange","addPerson","onSubmit","type","ErrorMessage","errorText","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setNewName","setNewNumber","setNewFilter","useEffect","initialPersons","event","target","preventDefault","length","returnedPerson","undefined","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.e1a66829.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = personObject => {\r\n    const request = axios.post(baseUrl, personObject)\r\n    return request.then(response => response.data)\r\n        .catch(error => {\r\n            return(error.response.data)\r\n        })\r\n}\r\n\r\nconst removePerson = person => {\r\n    if (window.confirm(\"Delete \" + person.name + \"?\")) { \r\n        const request = axios.delete(baseUrl + '/' + person.id)\r\n        return request.then(response => response)\r\n    }\r\n}\r\nconst updatePerson = (person, persons) => {\r\n    const idPosition  = persons.filter(personit => personit.name === person.name)[0].id\r\n    const request = axios.put(baseUrl + '/' + idPosition, person)\r\n    return request.then(response => response)\r\n    \r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    addPerson,\r\n    removePerson,\r\n    updatePerson\r\n}","import React from 'react'\r\nimport personService from '../services/personService.js'\r\n\r\nconst Persons = (props) => {\r\n    if(props.persons == '') {\r\n        return(<></>)\r\n    }\r\n    let filteredPersons = props.persons.filter(person => person.name.includes(props.newFilter))\r\n    const deletePerson = (person) => {\r\n        personService\r\n            .removePerson(person)\r\n            .then(props.setPersons(\r\n                props.persons.filter(personit => \r\n                    personit.id !== person.id\r\n                )\r\n                 \r\n            ))\r\n        props.setErrorText(`Deleted ${person.name} from database`)\r\n        setTimeout(() => {\r\n            props.setErrorText(null)\r\n        }, 5000)      \r\n    }\r\n    return(\r\n        <>\r\n        {filteredPersons.map((person) =>\r\n            <p key={person.name}>{person.name} {person.number} <Button handleClick={() => deletePerson(person)}/></p> \r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button onClick={props.handleClick}>Delete</button>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ value, handleOnChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={value} onChange={handleOnChange}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Personform = ({newName, handleNameChange, newNumber, handleNumberChange, addPerson}) => {\r\n    return(\r\n        <form onSubmit={addPerson}>\r\n            <h2>add a new</h2>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Personform","import React, { useState, useEffect } from 'react'\nimport Persons from './components/persons.js'\nimport Filter from './components/Filter.js'\nimport Personform from './components/Personform.js'\nimport personService from './services/personService.js'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([''])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ errorText, setErrorText ] = useState(null)\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n   \n    if(persons.filter(person => person.name === personObject.name).length > 0) { \n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) { \n        personService\n          .updatePerson(personObject, persons)\n          setPersons(persons.map(person => person.name === newName ? personObject : person))\n          setNewName('')\n          setNewNumber('')\n          setErrorText(`Updated ${personObject.name} phonenumber`)\n          setTimeout(() => {\n            setErrorText(null)\n          }, 5000)\n      }\n      \n      return \n    }\n\n    personService\n      .addPerson(personObject)\n      .then(returnedPerson => {\n        if(returnedPerson.name != undefined) {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setErrorText(`Added ${returnedPerson.name}`)\n          setTimeout(() => {\n            setErrorText(null)\n          }, 5000)\n        } else {\n          setErrorText(returnedPerson.error)\n          setTimeout(() => {\n            setErrorText(null)\n          }, 5000)\n        }\n      })\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n    })\n  }, [])\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorMessage errorText={errorText} />\n      <Filter value={newFilter} handleOnChange={handleFilterChange} />\n      <Personform newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} addPerson={addPerson}/>\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} newFilter={newFilter} setPersons={setPersons} setErrorText={setErrorText} />\n    </div>\n  )\n}\n\nconst ErrorMessage = ({errorText}) => {\n    const errorStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10\n    }\n\n    if(errorText === null ) {\n      return null\n    }  \n\n    return (\n      <div style={errorStyle}>\n        {errorText}\n      </div>\n    )\n}\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}